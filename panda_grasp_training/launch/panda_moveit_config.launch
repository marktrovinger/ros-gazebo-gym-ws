<launch>

  <!-- Launch file arguments-->
  <arg name="real" default="false"/>
  <arg name="gazebo" default="false"/>
  <arg name="rviz_gui" default="true"/>
  <arg name="external_franka_control" default="false"/>
  <arg name="joint_state_gui" default="false"/>
  <arg name="gripper_center" default="false"/>
  <arg name="gripper_center_xyz" default="0.0 0.0 0.10"/>
  <arg name="gripper_center_rpy" default="0.0 0.0 0.0"/>
  <!-- <arg name="moveit_perception" default="false" /> -->
  <!-- <arg name="moveit_perception_frame" default="kinect2_ir_optical_frame"/> -->
  <!-- <arg name="octomap_type" default="depthmap"/> -->
  <!-- <arg name="octomap_resolution" default="0.01"/> -->
  <arg name="pipeline" default="ompl" />
  <arg name="load_gripper" default="true"/>
  <arg name="load_robot_description" default="true" />

  <!-- Database settings -->
  <arg name="db" default="false" />
  <arg name="db_path" default="$(find panda_moveit_config)/default_warehouse_mongo_db" />
  <!-- GDB Debug Option -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg if="$(arg debug)" name="launch_prefix" value="gdb -x $(find panda_moveit_config)/launch/gdb_settings.gdb --ex run --args" />
  <!-- Change loggin formatg -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [WallTime: ${time}]: [${node}] ${message}" if="$(arg debug)"/>

  <!-- If needed, broadcast static tf for robot root -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world panda_link0" respawn="true"/> -->

  <!-- We do not have a robot connected, so publish fake joint states -->
  <group if="$(eval not arg('real') and not arg('gazebo'))">
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="$(arg joint_state_gui)"/>
      <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
    </node>
  </group>
  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" respawn="true" if="$(eval not arg('real'))"/>

  <!-- Spawn controller if working with real robot and controlled from this pc -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="position_joint_trajectory_controller" if="$(eval arg('real') and not arg('external_franka_control'))"/>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find panda_moveit_config)/launch/planning_context.launch">
    <arg name="load_gripper" value="$(arg load_gripper)"/>
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
    <arg name="gripper_center" value="$(arg gripper_center)"/>
    <arg name="gripper_center_xyz" value="$(arg gripper_center_xyz)"/>
    <arg name="gripper_center_rpy" value="$(arg gripper_center_rpy)"/>
  </include>

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find panda_moveit_config)/launch/move_group.launch" unless="$(eval arg('external_franka_control'))">
    <arg name="load_gripper" value="$(arg load_gripper)"/>
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
    <arg name="gripper_center" value="$(arg gripper_center)"/>
    <arg name="gripper_center_xyz" value="$(arg gripper_center_xyz)"/>
    <arg name="gripper_center_rpy" value="$(arg gripper_center_rpy)"/>
    <!-- <arg name="moveit_perception" value="$(arg moveit_perception)" /> -->
    <!-- <arg name="moveit_perception_frame" value="$(arg moveit_perception_frame)"/> -->
    <!-- <arg name="octomap_type" value="$(arg octomap_type)"/> -->
    <!-- <arg name="octomap_resolution" value="$(arg octomap_resolution)"/> -->
  </include>

  <!-- Run Rviz -->
  <group if="$(arg rviz_gui)">
    <include file="$(find panda_grasp_training)/launch/moveit_rviz.launch">
      <arg name="debug" value="$(arg debug)"/>
    </include>
  </group>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" if="$(eval not arg('real'))"/>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find panda_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>
