; Auto-generated. Do not edit!


(cl:in-package panda_gazebo-msg)


;//! \htmlinclude FollowJointTrajectoryActionGoal.msg.html

(cl:defclass <FollowJointTrajectoryActionGoal> (roslisp-msg-protocol:ros-message)
  ((header
    :reader header
    :initarg :header
    :type std_msgs-msg:Header
    :initform (cl:make-instance 'std_msgs-msg:Header))
   (goal_id
    :reader goal_id
    :initarg :goal_id
    :type actionlib_msgs-msg:GoalID
    :initform (cl:make-instance 'actionlib_msgs-msg:GoalID))
   (goal
    :reader goal
    :initarg :goal
    :type panda_gazebo-msg:FollowJointTrajectoryGoal
    :initform (cl:make-instance 'panda_gazebo-msg:FollowJointTrajectoryGoal)))
)

(cl:defclass FollowJointTrajectoryActionGoal (<FollowJointTrajectoryActionGoal>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <FollowJointTrajectoryActionGoal>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'FollowJointTrajectoryActionGoal)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name panda_gazebo-msg:<FollowJointTrajectoryActionGoal> is deprecated: use panda_gazebo-msg:FollowJointTrajectoryActionGoal instead.")))

(cl:ensure-generic-function 'header-val :lambda-list '(m))
(cl:defmethod header-val ((m <FollowJointTrajectoryActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader panda_gazebo-msg:header-val is deprecated.  Use panda_gazebo-msg:header instead.")
  (header m))

(cl:ensure-generic-function 'goal_id-val :lambda-list '(m))
(cl:defmethod goal_id-val ((m <FollowJointTrajectoryActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader panda_gazebo-msg:goal_id-val is deprecated.  Use panda_gazebo-msg:goal_id instead.")
  (goal_id m))

(cl:ensure-generic-function 'goal-val :lambda-list '(m))
(cl:defmethod goal-val ((m <FollowJointTrajectoryActionGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader panda_gazebo-msg:goal-val is deprecated.  Use panda_gazebo-msg:goal instead.")
  (goal m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <FollowJointTrajectoryActionGoal>) ostream)
  "Serializes a message object of type '<FollowJointTrajectoryActionGoal>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'header) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal_id) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <FollowJointTrajectoryActionGoal>) istream)
  "Deserializes a message object of type '<FollowJointTrajectoryActionGoal>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'header) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal_id) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<FollowJointTrajectoryActionGoal>)))
  "Returns string type for a message object of type '<FollowJointTrajectoryActionGoal>"
  "panda_gazebo/FollowJointTrajectoryActionGoal")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'FollowJointTrajectoryActionGoal)))
  "Returns string type for a message object of type 'FollowJointTrajectoryActionGoal"
  "panda_gazebo/FollowJointTrajectoryActionGoal")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<FollowJointTrajectoryActionGoal>)))
  "Returns md5sum for a message object of type '<FollowJointTrajectoryActionGoal>"
  "e5dfdfde003fbe231d7141be8b8992c2")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'FollowJointTrajectoryActionGoal)))
  "Returns md5sum for a message object of type 'FollowJointTrajectoryActionGoal"
  "e5dfdfde003fbe231d7141be8b8992c2")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<FollowJointTrajectoryActionGoal>)))
  "Returns full string definition for message of type '<FollowJointTrajectoryActionGoal>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%FollowJointTrajectoryGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: panda_gazebo/FollowJointTrajectoryGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Follow_joint_trajectory action~%# NOTE: This action extends the control_msgs/FollowJointTrajectoryAction such that~%# it also contains values to automatically generate the time axis~%~%# The joint trajectory to follow~%trajectory_msgs/JointTrajectory trajectory~%~%# Tolerances for the trajectory.  If the measured joint values fall~%# outside the tolerances the trajectory goal is aborted.  Any~%# tolerances that are not specified (by being omitted or set to 0) are~%# set to the defaults for the action server (often taken from the~%# parameter server).~%~%# Tolerances applied to the joints as the trajectory is executed.  If~%# violated, the goal aborts with error_code set to~%# PATH_TOLERANCE_VIOLATED.~%control_msgs/JointTolerance[] path_tolerance~%~%# To report success, the joints must be within goal_tolerance of the~%# final trajectory value.  The goal must be achieved by time the~%# trajectory ends plus goal_time_tolerance.  (goal_time_tolerance~%# allows some leeway in time, so that the trajectory goal can still~%# succeed even if the joints reach the goal some time after the~%# precise end time of the trajectory).~%#~%# If the joints are not within goal_tolerance after \"trajectory finish~%# time\" + goal_time_tolerance, the goal aborts with error_code set to~%# GOAL_TOLERANCE_VIOLATED~%control_msgs/JointTolerance[] goal_tolerance~%duration goal_time_tolerance~%~%# Extra time axis attributes~%# NOTE: Used for automatic time axis generation~%bool create_time_axis  # Automatically create a time axis~%float64 time_axis_step  # Time axis step size~%duration timeout # Action server timeout. If set to 0, no timeout is used and action waits indefinitely.~%~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectory~%Header header~%string[] joint_names~%JointTrajectoryPoint[] points~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectoryPoint~%# Each trajectory point specifies either positions[, velocities[, accelerations]]~%# or positions[, effort] for the trajectory to be executed.~%# All specified values are in the same order as the joint names in JointTrajectory.msg~%~%float64[] positions~%float64[] velocities~%float64[] accelerations~%float64[] effort~%duration time_from_start~%~%================================================================================~%MSG: control_msgs/JointTolerance~%# The tolerances specify the amount the position, velocity, and~%# accelerations can vary from the setpoints.  For example, in the case~%# of trajectory control, when the actual position varies beyond~%# (desired position + position tolerance), the trajectory goal may~%# abort.~%# ~%# There are two special values for tolerances:~%#  * 0 - The tolerance is unspecified and will remain at whatever the default is~%#  * -1 - The tolerance is \"erased\".  If there was a default, the joint will be~%#         allowed to move without restriction.~%~%string name~%float64 position  # in radians or meters (for a revolute or prismatic joint, respectively)~%float64 velocity  # in rad/sec or m/sec~%float64 acceleration  # in rad/sec^2 or m/sec^2~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'FollowJointTrajectoryActionGoal)))
  "Returns full string definition for message of type 'FollowJointTrajectoryActionGoal"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%FollowJointTrajectoryGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: panda_gazebo/FollowJointTrajectoryGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Follow_joint_trajectory action~%# NOTE: This action extends the control_msgs/FollowJointTrajectoryAction such that~%# it also contains values to automatically generate the time axis~%~%# The joint trajectory to follow~%trajectory_msgs/JointTrajectory trajectory~%~%# Tolerances for the trajectory.  If the measured joint values fall~%# outside the tolerances the trajectory goal is aborted.  Any~%# tolerances that are not specified (by being omitted or set to 0) are~%# set to the defaults for the action server (often taken from the~%# parameter server).~%~%# Tolerances applied to the joints as the trajectory is executed.  If~%# violated, the goal aborts with error_code set to~%# PATH_TOLERANCE_VIOLATED.~%control_msgs/JointTolerance[] path_tolerance~%~%# To report success, the joints must be within goal_tolerance of the~%# final trajectory value.  The goal must be achieved by time the~%# trajectory ends plus goal_time_tolerance.  (goal_time_tolerance~%# allows some leeway in time, so that the trajectory goal can still~%# succeed even if the joints reach the goal some time after the~%# precise end time of the trajectory).~%#~%# If the joints are not within goal_tolerance after \"trajectory finish~%# time\" + goal_time_tolerance, the goal aborts with error_code set to~%# GOAL_TOLERANCE_VIOLATED~%control_msgs/JointTolerance[] goal_tolerance~%duration goal_time_tolerance~%~%# Extra time axis attributes~%# NOTE: Used for automatic time axis generation~%bool create_time_axis  # Automatically create a time axis~%float64 time_axis_step  # Time axis step size~%duration timeout # Action server timeout. If set to 0, no timeout is used and action waits indefinitely.~%~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectory~%Header header~%string[] joint_names~%JointTrajectoryPoint[] points~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectoryPoint~%# Each trajectory point specifies either positions[, velocities[, accelerations]]~%# or positions[, effort] for the trajectory to be executed.~%# All specified values are in the same order as the joint names in JointTrajectory.msg~%~%float64[] positions~%float64[] velocities~%float64[] accelerations~%float64[] effort~%duration time_from_start~%~%================================================================================~%MSG: control_msgs/JointTolerance~%# The tolerances specify the amount the position, velocity, and~%# accelerations can vary from the setpoints.  For example, in the case~%# of trajectory control, when the actual position varies beyond~%# (desired position + position tolerance), the trajectory goal may~%# abort.~%# ~%# There are two special values for tolerances:~%#  * 0 - The tolerance is unspecified and will remain at whatever the default is~%#  * -1 - The tolerance is \"erased\".  If there was a default, the joint will be~%#         allowed to move without restriction.~%~%string name~%float64 position  # in radians or meters (for a revolute or prismatic joint, respectively)~%float64 velocity  # in rad/sec or m/sec~%float64 acceleration  # in rad/sec^2 or m/sec^2~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <FollowJointTrajectoryActionGoal>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'header))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal_id))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <FollowJointTrajectoryActionGoal>))
  "Converts a ROS message object to a list"
  (cl:list 'FollowJointTrajectoryActionGoal
    (cl:cons ':header (header msg))
    (cl:cons ':goal_id (goal_id msg))
    (cl:cons ':goal (goal msg))
))
